package {{ .Package }}

// Imports
import (
    "net/http"
    "github.com/labstack/echo"
    {{- range .Imports}}
    "{{.}}"
    {{- end}}
)

// Models
{{- range .Structs }}
type {{ .Name }} struct {
    {{- range .Fields }}
    {{ .Name }} {{ .Type }} `json:"{{ .JsonName }}"`
    {{- end }}
}
{{ end }}
// Service Interface
type Service interface {
{{- range .Methods }}
    {{ .Signature }} 
{{- end }}
}

// Handlers
type Handler struct {
    service Service
}

{{ range .Methods -}}
func (h *Handler) {{ .Name }}(c echo.Context) error {
{{- if .HasParameters }}
    m := {{.RequestType}}{}
	err := c.Bind(&m)
	if err != nil {
		return err
	}

{{- if .HasResponse }}
    response, err := h.service.{{ .Name }}(&m)
    if err != nil {
        return err
    }

    return c.JSON(http.StatusOK, response)
{{- else }}
    err = h.service.{{ .Name }}(&m)
    if err != nil {
        return err
    }

    return c.NoContent(http.StatusOK)
{{- end -}}
{{- else -}}
{{- if .HasResponse }}
    response, err := h.service.{{ .Name }}()
    if err != nil {
        return err
    }

    return c.JSON(http.StatusOK, response)
{{- else }}
    err = h.service.{{ .Name }}(&m)
    if err != nil {
        return err
    }

    return c.NoContent(http.StatusOK)
{{- end -}}
{{- end }}
}

{{ end -}}

func (h *Handler) RegisterHandlers(e *echo.Echo, middleware echo.MiddlewareFunc) {
    {{- range .Methods }}
    e.POST("/{{ .GetPath }}", h.{{ .Name }}, middleware)
    {{- end }}
}